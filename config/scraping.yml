in:
  type: file
  path_prefix: ./data/html/sample
  parser:
    type: scraping_parser
    schema:
      - name: appearance_image
        type: json
        xpath: //p[contains(text(), '外観')]/preceding-sibling::span[1]//img/@src
        regexp: .+
      - name: floor_plan_image
        type: json
        xpath: //p[contains(text(), '間取図')]/preceding-sibling::span[1]//img/@src
        regexp: .+
      # images:
      #   elements:
      #     appearance:
      #       xpath: //p[contains(text(), '外観')]/preceding-sibling::span[1]//img/@src
      #       regexp: .+
      #     floor_plan:
      #       xpath: //p[contains(text(), '間取図')]/preceding-sibling::span[1]//img/@src
      #       regexp: .+
      #     image:
      #       xpath: //p[not(contains(text(), '間取図')) and not(contains(text(), '外観'))]/preceding-sibling::span[1]//img/@src
      #       regexp: .+
      #   func: callback
      # name:
      #   func: string
      #   elements:
      #     name:
      #       xpath: //*[@id='contentMain']/article/div[1]/div[1]/h1/text()
      #       regexp: (.+?)/.+?/.+?/.+?/.+
      # room_number:
      #   func: none
      # rent:
      #   func: string
      #   elements:
      #     rent:
      #       xpath: //span[contains(text(), '賃料')]/../following-sibling::td[1]//text()
      #       regexp: .+
# filter:
out:
  type: stdout
